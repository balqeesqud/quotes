/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class App {


    public static void main(String[] args) {
        Gson gson = new Gson(); //creates an instance of the Gson class, which will be used to parse JSON data into Java objects.
        List<Quote> quotes = new ArrayList<>();  // creating an ArrayList named quotes to store the parsed quotes.
        // Each element in this list will be an instance of the Quote class.
        //naming  the parameters should match the json file
        // Here How it will be

//           quotas = [
//                   Quote(author, text ), based on the constructor of Quote class
//                   Quote(author, text ),
//                   Quote(author, text ),
//            ....
//                    ]


        try {
            BufferedReader reader = new BufferedReader(new FileReader("app/src/main/resources/recentQuotes.json"));

            // fromJson() used to parse the JSON data read from the reader into an array of Quote objects.
            Quote[] quoteArray = gson.fromJson(reader, Quote[].class); // Once the BF sees [ ] in the Json file, the return values will be and [ ]


            //parsed Quote objects are then added to the quotes list using the addAll method.
            quotes.addAll(Arrays.asList(quoteArray));
        } catch (IOException e) {
            e.printStackTrace();
        }

        if (!quotes.isEmpty()) {
            Random random = new Random();
            int index = random.nextInt(quotes.size());

        //Example: quotes.size() is equal to 5.
        //When you call random.nextInt(5), the nextInt method will generate a random integer from 0 to 4 (inclusive).
        // This random integer will represent an index in the range of available quotes.
        //For example, if random.nextInt(5) returns 2, it means the program will select the quote at index 2, which is quote3.

            Quote selectedQuote = quotes.get(index);
            //selected quote at the randomly generated index is retrieved from the quotes list and stored
            // in the selectedQuote variable

            System.out.println("Quote: " + selectedQuote.getText());
            System.out.println("Author: " + selectedQuote.getAuthor());
        } else {
            System.out.println("No quotes available.");
        }
    }
}